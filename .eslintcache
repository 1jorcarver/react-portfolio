[{"/Users/jordancarver/Desktop/projects/react-portfolio/src/index.js":"1","/Users/jordancarver/Desktop/projects/react-portfolio/src/App.js":"2","/Users/jordancarver/Desktop/projects/react-portfolio/src/reportWebVitals.js":"3","/Users/jordancarver/Desktop/projects/react-portfolio/src/components/Contact/index.js":"4","/Users/jordancarver/Desktop/projects/react-portfolio/src/utils/helpers.js":"5"},{"size":547,"mtime":1608519244495,"results":"6","hashOfConfig":"7"},{"size":911,"mtime":1608520147340,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608505211695,"results":"9","hashOfConfig":"7"},{"size":2308,"mtime":1608515361454,"results":"10","hashOfConfig":"7"},{"size":363,"mtime":1608508716015,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"173r3c8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jordancarver/Desktop/projects/react-portfolio/src/index.js",[],["24","25"],"/Users/jordancarver/Desktop/projects/react-portfolio/src/App.js",[],"/Users/jordancarver/Desktop/projects/react-portfolio/src/reportWebVitals.js",[],"/Users/jordancarver/Desktop/projects/react-portfolio/src/components/Contact/index.js",["26"],"import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n    const [formState, setFormState] = useState({ name: '', email: '', message: ''});\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const { name, email, message } = formState;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!errorMessage) {\n            console.log('Submit Form', formState);\n        }\n    };\n\n    const handleChange = (e) => {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!e.target.value.length) {\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n            console.log('Handle Form', formState);\n        }\n    };\n\n    return (\n        <section>\n            <h1 data-testid=\"h1tag\">\"Contact Me\" Coming Soon ... Email me: <a href = \"mailto:uubootcampjc@gmail.com\"></a></h1>\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email Address:</label>\n                    <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n                </div>\n                <div>\n                    <label htmlFor=\"message\">Message:</label>\n                    <input name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p className=\"error-text\">{errorMessage}</p>\n                    </div>\n                )}\n                <button data-testid=\"button\" type=\"submit\">Submit</button>\n            </form>\n        </section>\n    );\n}\n\nexport default ContactForm;","/Users/jordancarver/Desktop/projects/react-portfolio/src/utils/helpers.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":41,"column":76,"nodeType":"33","endLine":41,"endColumn":118},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]